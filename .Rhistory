{
temp1=read_excel(temp[i], col_names = FALSE)
colnames(temp1)=names
datalist[[i]]<-temp1
}
library(readxl)
### 2014
year=2014
setwd("~/Documents/Sites/Git_repo/Databases/MEF/Gasto2014")
temp<-list.files(pattern = ".xlsx")
datalist=list()
for(i in 1:length(temp))
{
temp1=read_excel(temp[i], col_names = FALSE)
colnames(temp1)=names
datalist[[i]]<-temp1
}
GASTO2014=do.call(rbind, datalist)%>%
mutate(year=year,
UBIGEO=substr(Municipalidad,1,6))
year=2015
GASTO=bind_rows(GASTO2007,GASTO2008,GASTO2009,GASTO2010,
GASTO2011,GASTO2012,GASTO2013,
GASTO2014,GASTO2015,GASTO2016,
GASTO2017,GASTO2018,
GASTO2019)
GASTO=GASTO%>%filter(!is.na(PIA))
#--------
# Creando campos PIM_NO_CANON y AVANCE_NO_CANON
#-------
gasto=GASTO
canon <- read_excel("CANON.xlsx", sheet = "Sheet 1")
canon=CANON
#gasto$monto <- as.numeric(gasto$monto)
#gasto_wide <- spread(gasto,key = "Variable", value = "monto")
canon_wide <- spread(canon,key = "Variable", value = "monto")
names(canon)
gasto_wide <- gasto%>% select(Municipalidad,UBIGEO,year,PIA,PIM,
Avance,Devengado,Girado,
Certificacion,Compromiso,AtencionCompromiso)
canon_wide <- canon_wide %>% select(Municipalidad,UBIGEO,year,PIA_CANON,PIM_CANON,
Avance_CANON,Devengado_CANON,Girado_CANON,
Certificacion_CANON,Compromiso_CANON,AtencionCompromiso_CANON)
names(canon)
canon_wide <- canon %>% select(Municipalidad,UBIGEO,year,PIA_CANON,PIM_CANON,
Avance_CANON,Devengado_CANON,Girado_CANON,
Certificacion_CANON,Compromiso_CANON,AtencionCompromiso_CANON)
gasto_canon <- left_join(gasto_wide,canon_wide, by = c("Municipalidad","UBIGEO","year"))
#Se encuentra que algunos datos presentan separacion de comas, se procede a eliminar
gasto_canon$PIA <- gsub("\\D","",gasto_canon$PIA)
gasto_canon$PIM <- gsub("\\D","",gasto_canon$PIM)
gasto_canon$PIA_CANON <- gsub("\\D","",gasto_canon$PIA_CANON)
gasto_canon$PIM_CANON <- gsub("\\D","",gasto_canon$PIM_CANON)
gasto_canon$Devengado <- gsub("\\D","",gasto_canon$Devengado)
#Se establece type numerico previa resta
gasto_canon$PIA <- as.numeric(gasto_canon$PIA)
gasto_canon$PIM <- as.numeric(gasto_canon$PIM)
gasto_canon$PIA_CANON <- as.numeric(gasto_canon$PIA_CANON)
gasto_canon$PIM_CANON <- as.numeric(gasto_canon$PIM_CANON)
gasto_canon$Devengado <- as.numeric(gasto_canon$Devengado)
gasto_canon$Devengado_CANON <- as.numeric(gasto_canon$Devengado_CANON)
gasto_canon <- gasto_canon %>% group_by(Municipalidad,UBIGEO,year) %>%
mutate(PIA_NoCanon = ifelse(is.na(PIA),0,PIA)-
ifelse(is.na(PIA_CANON),0,PIA_CANON)) %>%
mutate(PIM_NoCanon = ifelse(is.na(PIM),0,PIM)-
ifelse(is.na(PIM_CANON),0,PIM_CANON),
DevengadoNoCanon = ifelse(is.na(Devengado),0,Devengado)-
ifelse(is.na(Devengado_CANON),0,Devengado_CANON)) %>%
mutate(Avance_NoCanon = round((DevengadoNoCanon/PIM_NoCanon)*100,2))
gasto_canon %>% select(-c(PIA_CANON,PIM_CANON,Avance_CANON,
Devengado_CANON,Girado_CANON,
Certificacion_CANON,Compromiso_CANON,
AtencionCompromiso_CANON,PIA_NoCanon)) %>%
gather(Variable,monto,
-c(Municipalidad,UBIGEO,year)) %>%
export("GASTO.xlsx")
View(gasto_canon)
#"Existe un problema con los nombre de los distritos/provincial, estos no estan
#uniformizados. Ejemplo ubigeo 010516 : 010516-300058: MUNICIPALIDAD DISTRITAL DE SAN CRISTOBAL
#/// 010516-300058: MUNICIPALIDAD DISTRITAL DE SAN CRISTOBAL DE OLTO"
lista.municipalidades <- gasto_canon %>%
select(Municipalidad,UBIGEO) %>% distinct() %>% group_by(UBIGEO) %>%
filter(Municipalidad == head(Municipalidad,1)) %>% ungroup()
View(lista.municipalidades)
# Unimos a base de datos
gasto_canon <- merge(gasto_canon, lista.municipalidades, by ="UBIGEO")
gasto_canon$Municipalidad.x <- gasto_canon$Municipalidad.y
colnames(gasto_canon)[2] <- "Municipalidad"
gasto_canon <- gasto_canon[,-24]
View(gasto_canon)
gasto_canon %>% select(-c(PIA_CANON,PIM_CANON,Avance_CANON,
Devengado_CANON,Girado_CANON,
Certificacion_CANON,Compromiso_CANON,
AtencionCompromiso_CANON,PIA_NoCanon)) %>%
gather(Variable,monto,
-c(Municipalidad,UBIGEO,year)) %>%
export("GASTO.xlsx")
names(gasto_canon)
gasto_canon <- gasto_canon[,-24]
gasto_canon %>% select(-c(PIA_CANON,PIM_CANON,Avance_CANON,
Devengado_CANON,Girado_CANON,
Certificacion_CANON,Compromiso_CANON,
AtencionCompromiso_CANON,PIA_NoCanon)) %>%
gather(Variable,monto,
-c(Municipalidad,UBIGEO,year)) %>%
export("GASTO.xlsx")
names(gasto_canon)
gasto_canon %>% select(-c(PIA_CANON,PIM_CANON,Avance_CANON,
Devengado_CANON,Girado_CANON,
Certificacion_CANON,Compromiso_CANON,
AtencionCompromiso_CANON,PIA_NoCanon)) %>%View()
names(gasto_canon)
colnames(gasto_canon)[c(2,3)] <- c("Municipalidad","year")
gasto_canon %>% select(-c(PIA_CANON,PIM_CANON,Avance_CANON,
Devengado_CANON,Girado_CANON,
Certificacion_CANON,Compromiso_CANON,
AtencionCompromiso_CANON,PIA_NoCanon)) %>%View()
gasto_canon %>% select(-c(PIA_CANON,PIM_CANON,Avance_CANON,
Devengado_CANON,Girado_CANON,
Certificacion_CANON,Compromiso_CANON,
AtencionCompromiso_CANON,PIA_NoCanon)) %>%
gather(Variable,monto,
-c(Municipalidad,UBIGEO,year)) %>%
export("GASTO.xlsx")
setwd("~/Documents/Sites/Git_repo/Databases/MEF")
CANON=import("CANON.xlsx") ## 2008-19
GASTO=import("GASTO.xlsx") ## 2007-19
MEF=rbind(CANON,GASTO)%>%
mutate(monto=gsub(',','',monto))%>%
mutate(monto=as.numeric(gsub("[[:space:]]",'',monto)))
library(RMySQL)
library(RMariaDB)
library(DBI)
library(dplyr)
library(tidyr)
library(stringr)
library(lubridate)
library(DT)
localuserpassword <- "Inciadas@22"
con<- dbConnect(MySQL(), user='inciomaster',
password=localuserpassword,
dbname='InciosData',
host='107.180.50.242',
Port = 3306)
dbWriteTable(con, "ECO_MEF_SELF", MEF,
overwrite = TRUE)
dbDisconnect(con)
con<- dbConnect(MySQL(), user='inciomaster',
password=localuserpassword,
dbname='InciosData',
host='107.180.50.242',
Port = 3306)
dbWriteTable(con, "ECO_MEF_SELF", MEF,
overwrite = TRUE)
dbDisconnect(con)
######################### Ambiente##########
########## Data Reniec########
# Variable población para todas las municipalidades
###########################
library(RMySQL)
library(RMariaDB)
library(RMariaDB)
library(DBI)
library(dplyr)
library(tidyr)
library(stringr)
library(lubridate)
library(DT)
localuserpassword <- "Inciadas@22"
con<- dbConnect(MySQL(), user='inciomaster',
password=localuserpassword,
dbname='InciosData',
host='107.180.50.242',
Port = 3306)
dataRenic=dbReadTable(con,"OT_RENIEC_DNI2019")
dbDisconnect(con)
View(head(dataRenic))
dataRenic=dataRenic%>%dplyr::select(UBIGEO_RENIEC,
UBIGEO_INEI,
Departamento,
Provincia,
Distrito,
Cantidad,Pais)%>%
filter(Pais=="Peru")%>%
dplyr::group_by(UBIGEO_RENIEC,
UBIGEO_INEI,
Departamento,
Provincia,
Distrito)%>%
dplyr::summarize(poblacion=sum(Cantidad))
View(dataRenic)
con<- dbConnect(MySQL(), user='inciomaster',
password=localuserpassword,
dbname='InciosData',
host='107.180.50.242',
Port = 3306)
dataRenic=dbReadTable(con,"OT_RENIEC_DNI2019")
dataRenic$UBIGEO_RENIEC%>%unique()%>%nrow()
dataRenic$UBIGEO_RENIEC%>%unique()
View(dataRenic)
dataReniec=dataRenic%>%dplyr::select(UBIGEO_RENIEC,
UBIGEO_INEI,
Departamento,
Provincia,
Distrito,
Cantidad,Pais)%>%
filter(Pais=="Peru")
dataReniec=dataRenic%>%dplyr::select(UBIGEO_RENIEC,
UBIGEO_INEI,
Departamento,
Provincia,
Distrito,
Cantidad,Pais)%>%
filter(Pais=="Peru")%>%
dplyr::group_by(UBIGEO_RENIEC,
UBIGEO_INEI,
Departamento,
Provincia,
Distrito)%>%
dplyr::summarize(poblacion=sum(Cantidad))
57*3.3
2842+947+4499
devtools::install_git("vdeminstitute/vdemdata")
devtools::install_github("vdeminstitute/vdemdata")
clear
600*25
400*25
knitr::opts_chunk$set(echo = FALSE, message = FALSE, fig.align = "center", warning = FALSE,results = 'hide', fig.keep = "all")
##Funcion para graficos de aprobación general
aprobacion = function(data){
aprobacion = data%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION)%>%
summarize(total=n())%>%
summarize(APROBACION,total,TOT = sum(total))
grafico.aprobacion = aprobacion %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
ggplot2::ggplot(aes(x=APROBACION, y=Porc)) +
ggplot2::geom_bar(stat="identity", position = position_dodge(),color ="#424632", fill="#424632") +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Aprobación", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5)+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
return(list(aprobacion,grafico.aprobacion))
}
##Funcion para graficos de aprobación por sexo
aprobacion_sexo = function(data){
aprobacion = data%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION,Sexo)%>%
summarize(total=n())%>%
group_by(Sexo)%>%
summarize(APROBACION,total,TOT = sum(total))
grafico.aprobacion = aprobacion %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
ggplot2::ggplot(aes(x=Sexo, y=Porc, fill = APROBACION )) +
ggplot2::geom_bar(stat="identity", position = position_dodge()) +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Sexo", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5,position = position_dodge(width = 1))+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
return(list(aprobacion,grafico.aprobacion))
}
##Funcion para graficos de aprobación por región
aprobacion_reg = function(data){
aprobacion = data%>%
dplyr::mutate(data, Region = ifelse(Departamento.en.el.que.reside == "Lima","Lima","No Lima"))%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION,Region)%>%
summarize(total=n())%>%
group_by(Region)%>%
summarize(APROBACION,total,TOT = sum(total))
grafico.aprobacion = aprobacion %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
ggplot2::ggplot(aes(x=Region, y=Porc, fill = APROBACION )) +
ggplot2::geom_bar(stat="identity", position = position_dodge()) +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Región", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5,position = position_dodge(width = 1))+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
return(list(aprobacion,grafico.aprobacion))
}
aprobacion.intencion = select(df,9,10,12)
#Librerías
library(openxlsx)
library(dplyr)
library(dplyr)
library(tiyr)
library(tidyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, fig.align = "center", warning = FALSE,results = 'hide', fig.keep = "all")
#Librerías
library(openxlsx)
library(dplyr)
library(ggplot2)
##Abrir data
file= "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ50V4pHALVNUNAgX8JNI3Tx2Or1X0gZ0umKo4yKofhWBzgTYAwYK-3Ai_aJ6RRKP5IK3HxNO0PduTB/pub?output=xlsx"
df<-openxlsx::read.xlsx(file)
##Funcion para graficos de aprobación general
aprobacion = function(data){
aprobacion = data%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION)%>%
summarize(total=n())%>%
summarize(APROBACION,total,TOT = sum(total))
grafico.aprobacion = aprobacion %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
ggplot2::ggplot(aes(x=APROBACION, y=Porc)) +
ggplot2::geom_bar(stat="identity", position = position_dodge(),color ="#424632", fill="#424632") +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Aprobación", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5)+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
return(list(aprobacion,grafico.aprobacion))
}
##Funcion para graficos de aprobación por sexo
aprobacion_sexo = function(data){
aprobacion = data%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION,Sexo)%>%
summarize(total=n())%>%
group_by(Sexo)%>%
summarize(APROBACION,total,TOT = sum(total))
grafico.aprobacion = aprobacion %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
ggplot2::ggplot(aes(x=Sexo, y=Porc, fill = APROBACION )) +
ggplot2::geom_bar(stat="identity", position = position_dodge()) +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Sexo", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5,position = position_dodge(width = 1))+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
return(list(aprobacion,grafico.aprobacion))
}
##Funcion para graficos de aprobación por región
aprobacion_reg = function(data){
aprobacion = data%>%
dplyr::mutate(data, Region = ifelse(Departamento.en.el.que.reside == "Lima","Lima","No Lima"))%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION,Region)%>%
summarize(total=n())%>%
group_by(Region)%>%
summarize(APROBACION,total,TOT = sum(total))
grafico.aprobacion = aprobacion %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
ggplot2::ggplot(aes(x=Region, y=Porc, fill = APROBACION )) +
ggplot2::geom_bar(stat="identity", position = position_dodge()) +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Región", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5,position = position_dodge(width = 1))+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
return(list(aprobacion,grafico.aprobacion))
}
Intencion.voto = select(df,7,10,12)
Intencion.voto = Intencion.voto%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION)%>%
summarize(total=n())%>%
summarize(APROBACION,total,TOT = sum(total))
Intencion.voto = Intencion.voto %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
ggplot2::ggplot(aes(x=APROBACION, y=Porc)) +
ggplot2::geom_bar(stat="identity", position = position_dodge(),color ="#424632", fill="#424632") +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Candidatos", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5)+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
print(Intencion.voto)
Intencion.voto = select(df,7,10,12)
Intencion.voto = Intencion.voto%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION)%>%
summarize(total=n())%>%
summarize(APROBACION,total,TOT = sum(total))%>%
arrange(APROBACION)
Intencion.voto = Intencion.voto %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
ggplot2::ggplot(aes(x=APROBACION, y=Porc)) +
ggplot2::geom_bar(stat="identity", position = position_dodge(),color ="#424632", fill="#424632") +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Candidatos", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5)+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
print(Intencion.voto)
Intencion.voto = select(df,7,10,12)
Intencion.voto = Intencion.voto%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION)%>%
summarize(total=n())%>%
summarize(APROBACION,total,TOT = sum(total))
Intencion.voto = Intencion.voto %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
arrange(Porc)%>%
ggplot2::ggplot(aes(x=APROBACION, y=Porc)) +
ggplot2::geom_bar(stat="identity", position = position_dodge(),color ="#424632", fill="#424632") +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Candidatos", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5)+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
print(Intencion.voto)
Intencion.voto = select(df,7,10,12)
Intencion.voto = Intencion.voto%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION)%>%
summarize(total=n())%>%
summarize(APROBACION,total,TOT = sum(total))
Intencion.voto = Intencion.voto %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))
ggplot2::ggplot(aes(x=APROBACION, y=reorder(Porc))) +
ggplot2::geom_bar(stat="identity", position = position_dodge(),color ="#424632", fill="#424632") +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Candidatos", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5)+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
Intencion.voto = select(df,7,10,12)
Intencion.voto = Intencion.voto%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION)%>%
summarize(total=n())%>%
summarize(APROBACION,total,TOT = sum(total))
Intencion.voto = Intencion.voto %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
ggplot2::ggplot(aes(x=APROBACION, y=reorder(Porc))) +
ggplot2::geom_bar(stat="identity", position = position_dodge(),color ="#424632", fill="#424632") +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Candidatos", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5)+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
print(Intencion.voto)
Intencion.voto = select(df,7,10,12)
Intencion.voto = Intencion.voto%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION)%>%
summarize(total=n())%>%
summarize(APROBACION,total,TOT = sum(total))
Intencion.voto = Intencion.voto %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
ggplot2::ggplot(aes(x=APROBACION, y=Porc)) +
ggplot2::geom_bar(stat="identity", position = position_dodge(),color ="#424632", fill="#424632") +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Candidatos", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5)+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
print(Intencion.voto)
Intencion.voto = select(df,7,10,12)
Intencion.voto = Intencion.voto%>%
dplyr::rename(APROBACION = 1)%>%
dplyr::group_by(APROBACION)%>%
summarize(total=n())%>%
summarize(APROBACION,total,TOT = sum(total))
Intencion.voto = Intencion.voto %>%
dplyr:: mutate(Porc = (total/TOT)*100,
Porc = substr(Porc,1,4),
Porc = as.numeric(Porc))%>%
ggplot2::ggplot(aes(x=reorder(APROBACION,-Porc), y=Porc)) +
ggplot2::geom_bar(stat="identity", position = position_dodge(),color ="#424632", fill="#424632") +
ggplot2::ylim(0,100)+
ggplot2::labs(x = "Candidatos", y = "Porcentaje") +
ggplot2::geom_text(aes(label=Porc), size=3.5, vjust=-0.5)+
ggplot2::theme(axis.text.x = element_text(angle = 60, hjust = 1))
print(Intencion.voto)
250+75
29+19+19
8326/3.31
###Source
load("~/Documents/Rcodes/Twitter/funciones.R")
###Source
source("~/Documents/Rcodes/Twitter/funciones.R")
###Source
source("~/Documents/Rcodes/Twitter/funciones.R")
###Source
source("~/Documents/Rcodes/Twitter/funciones.R")
###SourceFunciones
source("https://raw.githubusercontent.com/jincio/Rcodes/main/Twitter/funciones.R?token=ACW7EVSIWC5OA6FATSIVOWDABDX5O")
###SourceFunciones
source("~/Documents/Rcodes/Twitter/funciones.R")
library(tidyverse)
library(rio)
# levantandoData ----------------------------------------------------------
file="~/Box Sync/Investigaciones/Dissertation/Data/Procesed/df1_classified2.xlsx"
data <- readxl::read_excel(file)
setwd("~/Documents/decidebien_fakeNews")
